{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_osh\\\\4. react\\\\todo-react-app\\\\src\\\\Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Example = () => {\n  _s();\n  // React에서 관리하는 데이터 state\n  const [mesaage, setMessage] = useState(\"Hello, world!\");\n  const [name, setName] = useState(\"홍길동\");\n  const [count, setCount] = useState(0);\n  // setter함수를 이용해서 state를 변경하면 화면에 바로 반영\n\n  // 일반 자바 스크립트 지역변수\n  // 값이 바뀌어도 화면에 렌더링이 일어나지 않는다\n  let element = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [mesaage, \" / \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 19\n  }, this); // JSX\n  let x = 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: x\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        x = 500;\n      },\n      children: \"Change X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), element, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setMessage(\"Hello, React\");\n        setName(\"박길동\");\n      },\n      children: \"Change Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Example, \"bR3DBM31e2aHjFX7homiVszeM3o=\");\n_c = Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","mesaage","setMessage","name","setName","count","setCount","element","children","fileName","_jsxFileName","lineNumber","columnNumber","x","onClick","_c","$RefreshReg$"],"sources":["D:/full_stack_osh/4. react/todo-react-app/src/Example.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nexport let Example = () => {\r\n\r\n    // React에서 관리하는 데이터 state\r\n    const [mesaage, setMessage] = useState(\"Hello, world!\");\r\n    const [name, setName] = useState(\"홍길동\")\r\n    const [count, setCount] = useState(0);\r\n    // setter함수를 이용해서 state를 변경하면 화면에 바로 반영\r\n\r\n    // 일반 자바 스크립트 지역변수\r\n    // 값이 바뀌어도 화면에 렌더링이 일어나지 않는다\r\n    let element = <p>{mesaage} / {name}</p> // JSX\r\n    let x = 100;\r\n    return (\r\n        <div>\r\n            <p>{x}</p>\r\n            <button onClick={() => {x = 500}}>Change X</button>\r\n            {element}\r\n            {/* 상태는 무조건 setter를 이용하여 변경해야 합니다. */}\r\n            <button onClick={() => {setMessage(\"Hello, React\"); setName(\"박길동\")}}>Change Message</button>\r\n            <p>Count: {count}</p>\r\n            <button onClick={() => setCount(count+1)}>Increase</button>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,IAAIC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,eAAe,CAAC;EACvD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC;;EAEA;EACA;EACA,IAAIW,OAAO,gBAAGT,OAAA;IAAAU,QAAA,GAAIP,OAAO,EAAC,KAAG,EAACE,IAAI;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,EAAC;EACxC,IAAIC,CAAC,GAAG,GAAG;EACX,oBACIf,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAIK;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACVd,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAM;QAACD,CAAC,GAAG,GAAG;MAAA,CAAE;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDL,OAAO,eAERT,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAM;QAACZ,UAAU,CAAC,cAAc,CAAC;QAAEE,OAAO,CAAC,KAAK,CAAC;MAAA,CAAE;MAAAI,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5Fd,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMR,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAE;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBUD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}