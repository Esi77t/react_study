{"ast":null,"code":"var _jsxFileName = \"D:\\\\full_stack_osh\\\\4. react\\\\todo-react-app\\\\src\\\\Gretting.js\";\nimport react, { useState } from 'react';\n\n// 함수형 컴포넌트의 정의\n// 컴포넌트의 이름을 정의할 때 대문자로 시작한다\n// props = {name : \"홍길동\"}\n// let {name} = props;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Greeting(props) {\n  // JSX문법으로 HTML 조각을 반환할 수 있다\n  return (\n    /*#__PURE__*/\n    // 하나의 루트요소만 반환 할 수 있다\n    // 여러 요소를 반환 할 때는 반드시 하나의 요소로 감싸야 한다\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Hello, \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)\n  );\n}\n\n// 수정 불가\n// 읽기 전용이다\n// props = {name:\"홍길동\"}\n_c = Greeting;\nexport function Farewell(props = {}) {\n  const {\n    name = \"김철수\"\n  } = props;\n  console.log(name);\n\n  // 기본적으로 props로 넘어온 데이터들은 읽기 전용이지만\n  // 수정하고 싶다면 state를 이용해서 바꾸면 된다\n  // const [name, setName] = useState(props.name);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Goodbye, \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setName(\"박길동\");\n      },\n      children: \"button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Farewell;\nvar _c, _c2;\n$RefreshReg$(_c, \"Greeting\");\n$RefreshReg$(_c2, \"Farewell\");","map":{"version":3,"names":["react","useState","jsxDEV","_jsxDEV","Greeting","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","Farewell","console","log","onClick","setName","_c2","$RefreshReg$"],"sources":["D:/full_stack_osh/4. react/todo-react-app/src/Gretting.js"],"sourcesContent":["import react, { useState } from 'react'\r\n\r\n// 함수형 컴포넌트의 정의\r\n// 컴포넌트의 이름을 정의할 때 대문자로 시작한다\r\n// props = {name : \"홍길동\"}\r\n// let {name} = props;\r\nexport function Greeting(props) {\r\n\t\t// JSX문법으로 HTML 조각을 반환할 수 있다\r\n\t\treturn (\r\n\t\t\t\t// 하나의 루트요소만 반환 할 수 있다\r\n\t\t\t\t// 여러 요소를 반환 할 때는 반드시 하나의 요소로 감싸야 한다\r\n\t\t\t<div>\r\n\t\t\t\t\t<h1>Hello, {props.name}</h1>\r\n\t\t\t</div>\r\n\t\t)\r\n}\r\n\r\n// 수정 불가\r\n// 읽기 전용이다\r\n// props = {name:\"홍길동\"}\r\nexport function Farewell(props = {}) {\r\n\tconst {name=\"김철수\"} = props;\r\n\tconsole.log(name);\r\n\r\n\t// 기본적으로 props로 넘어온 데이터들은 읽기 전용이지만\r\n\t// 수정하고 싶다면 state를 이용해서 바꾸면 된다\r\n\t// const [name, setName] = useState(props.name);\r\n\r\n    return (\r\n\t\t<div>\r\n\t\t\t<h1>Goodbye, {name}</h1>\r\n\t\t\t<button onClick={() => {setName(\"박길동\")}}>button</button>\r\n\t\t</div>\r\n\t)\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;EAC9B;EACA;IAAA;IACE;IACA;IACDF,OAAA;MAAAG,QAAA,eACEH,OAAA;QAAAG,QAAA,GAAI,SAAO,EAACD,KAAK,CAACE,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;AAET;;AAEA;AACA;AACA;AAAAC,EAAA,GAbgBR,QAAQ;AAcxB,OAAO,SAASS,QAAQA,CAACR,KAAK,GAAG,CAAC,CAAC,EAAE;EACpC,MAAM;IAACE,IAAI,GAAC;EAAK,CAAC,GAAGF,KAAK;EAC1BS,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;;EAEjB;EACA;EACA;;EAEG,oBACFJ,OAAA;IAAAG,QAAA,gBACCH,OAAA;MAAAG,QAAA,GAAI,WAAS,EAACC,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBR,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAM;QAACC,OAAO,CAAC,KAAK,CAAC;MAAA,CAAE;MAAAX,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAER;AAACO,GAAA,GAdeL,QAAQ;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}